name: 'Workflow installer'
run-name: Deploy workflows to ${{ inputs.repository }}

on:
  workflow_dispatch:
    inputs:
      type:
        required: true
        type: choice
        options:
          - 'auto-detection'
          - 'gradle'
          - 'yarn'
          - 'yarn2'
          - 'dotnet'
          - 'python'
          - 'prefect'
          - 'go'
        default: 'auto-detection'
        description: Choose a project type
      repository:
        required: true
        type: string
        description: Target repository name (WITH myplant-io/ or myplant-io-analytics/)

env:
  INPUT_TYPE: ${{ github.event.inputs.type }}

jobs:
  install:
    runs-on: [ubuntu-latest]
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout git workflow repository
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          path: source

      - name: Checkout GitHub target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: develop
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          token: ${{ secrets.CI_PAT }}
          path: target

      - name: Determine file extensions
        working-directory: ./target
        shell: bash
        run: |
          if [[ -d .github/workflows ]]; then
            if [[ -f .github/workflows/auto-update* ]]; then
              echo FILE_TYPE=$(ls .github/workflows/auto-update* |  tr . \\n | tail -n1) >> ${GITHUB_ENV}
            else
              echo FILE_TYPE=$(ls .github/workflows/ | head -n1 | tr . \\n | tail -n1) >> ${GITHUB_ENV}
            fi
          else
            echo FILE_TYPE=yml >> ${GITHUB_ENV}
          fi

      - name: Determine project type
        id: project-auto-detection
        working-directory: ./target
        if: env.INPUT_TYPE == 'auto-detection'
        env:
          TARGET_REPO: ${{ inputs.repository }}
        shell: bash
        run: |
          if [[ -f "build.gradle" || -f "build.gradle.kts" ]]; then
            if [[ -f "package.json" ]]; then
              echo "gradle project contains package.json"
              exit 1
            else
              echo "Gradle project detected"
              echo INPUT_TYPE=gradle >> ${GITHUB_ENV}
            fi
          elif [[ -f "yarn.lock" ]]; then
            if [[ -f ".yarnrc" || -f ".npmrc" ]]; then
              echo "Yarn project detected"
              echo INPUT_TYPE=yarn >> ${GITHUB_ENV}
            elif [[ -f ".yarnrc.yml" ]]; then
              echo "Yarn2 project detected"
              echo INPUT_TYPE=yarn2 >> ${GITHUB_ENV}
            else
              echo "cannot detect yarn version"
              exit 1
            fi
          elif [[ -f "Program.cs" || $(ls -1 *.sln 2>/dev/null | wc -l) != 0 ]]; then
            echo "Dotnet project detected"
            echo INPUT_TYPE=dotnet >> ${GITHUB_ENV}
          elif [[ -f "requirements.txt" || -f "pyproject.toml" ]]; then
            if [[ $TARGET_REPO == "prefect"* ]]; then
              echo "Prefect project detected"
              echo INPUT_TYPE=prefect >> ${GITHUB_ENV}
            else
              echo "Python project detected"
              echo INPUT_TYPE=python >> ${GITHUB_ENV}
            fi
          elif [[ -f "go.mod" ]]; then
            echo "go project detected"
            echo INPUT_TYPE=go >> ${GITHUB_ENV}
          else
            echo "could not detect project type"
            exit 1
          fi

      - name: Create feature branch
        if: env.INPUT_TYPE != 'auto-detect'
        working-directory: ./target
        run: |
          git branch chore/install-gh-actions 2>/dev/null || :
          git checkout chore/install-gh-actions
          git push --set-upstream origin chore/install-gh-actions 2>/dev/null || :
          git pull origin chore/install-gh-actions

      - name: Install dependabot
        if: env.INPUT_TYPE != 'auto-detect' && env.INPUT_TYPE != 'dotnet'
        run: |
          mkdir -p target/.github/
          mv -f source/workflow-templates/${{ env.INPUT_TYPE }}-dependabot.yml target/.github/dependabot.${{ env.FILE_TYPE }} 2>/dev/null || :

      - name: Move relevant GitHub actions in place
        if: env.INPUT_TYPE != 'auto-detect'
        run: |
          mkdir -p target/.github/workflows/
          mv -f source/workflow-templates/${{ env.INPUT_TYPE }}-deploy.yml target/.github/workflows/deploy.${{ env.FILE_TYPE }} 2>/dev/null || :
          mv -f source/workflow-templates/${{ env.INPUT_TYPE }}-test.yml target/.github/workflows/test.${{ env.FILE_TYPE }} 2>/dev/null || :
          mv -f source/workflow-templates/${{ env.INPUT_TYPE }}-sonarqube.yml target/.github/workflows/sonarqube.${{ env.FILE_TYPE }} 2>/dev/null || :
          mv -f source/workflow-templates/${{ env.INPUT_TYPE }}-dependency-check.yml target/.github/workflows/dependency-check.${{ env.FILE_TYPE }} 2>/dev/null || :
          mv -f source/workflow-templates/common-auto-update.yml target/.github/workflows/auto-update.${{ env.FILE_TYPE }} 2>/dev/null || :
          mv -f source/workflow-templates/common-merge.yml target/.github/workflows/merge.${{ env.FILE_TYPE }} 2>/dev/null || :

      - name: Commit and push changes
        if: env.INPUT_TYPE != 'auto-detect'
        uses: actions-js/push@v1.4
        with:
          branch: chore/install-gh-actions
          repository: ${{ inputs.repository }}
          directory: ./target
          github_token: ${{ secrets.CI_PAT }}
          message: 'chore: install default GitHub action workflows'

      - name: Create Pull Request
        if: env.INPUT_TYPE != 'auto-detect'
        uses: peter-evans/create-pull-request@v6
        with:
          title: 'chore: install default GitHub action workflows'
          token: ${{ secrets.CI_PAT }}
          path: ./target
          branch: chore/install-gh-actions
          base: develop
          delete-branch: true
