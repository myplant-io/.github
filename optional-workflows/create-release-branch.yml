# When triggered, it will use the source branch to create a new branch release/v{version} from it, where
# version is derived to the latest release tag bumped using conventional commits.
# Example: if commit starts with "feat: ", 1.1.1 is bumped to 1.2.1 (https://github.com/mathieudutour/github-tag-action#bumping)
#
# If this branch already exists, the source branch will be merged on top of it
#
# HINT: It is possible to merge directly into those feature branches without negative impact to the pipeline

name: 'Create Pre/Release branch'

on:
  workflow_dispatch:

jobs:
  start-release-cycle:
    runs-on: [self-hosted-standard]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Display receiver
        run: echo ${GITHUB_REF#refs/heads/}

      - name: Analyze repo
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: 'v'
          dry_run: true
          append_to_pre_release_tag: false

      - name: Determine release branch name
        id: branch-names
        env:
          preRelTag: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          nextRelease=${preRelTag%-*}
          echo next-release="$nextRelease" >> ${GITHUB_OUTPUT}
          echo name="release/$nextRelease" >> ${GITHUB_OUTPUT}
          echo source-branch="${GITHUB_REF#refs/heads/}" >> ${GITHUB_OUTPUT}

      - name: Look for existing branch
        id: branch-exists
        env:
          branch: ${{ steps.branch-names.outputs.name }}
        run: |
          branchExists=$(git ls-remote --heads origin ${branch})
          if [[ -z ${branchExists} ]]; then
              echo exists="false" >> ${GITHUB_OUTPUT}
          else
              echo exists="true" >> ${GITHUB_OUTPUT}
          fi

      - uses: peterjgrainger/action-create-branch@v3.0.0
        if: ${{ steps.branch-exists.outputs.exists == 'false' }}
        name: Create branch for release cycle
        env:
          # Use another token then GITHUB_TOKEN to trigger subsequent workflows
          GITHUB_TOKEN: ${{ secrets.CI_PAT }}
        with:
          branch: ${{ steps.branch-names.outputs.name }}

      - name: Prepare commit message
        if: ${{ steps.branch-exists.outputs.exists == 'true' }}
        id: commit-message
        env:
          BRANCH: ${{ steps.branch-names.outputs.source-branch }}
          RELEASE: ${{ steps.branch-names.outputs.next-release }}
        run: echo message="Merge branch $BRANCH into release $RELEASE" >> ${GITHUB_OUTPUT}

      - name: Merge for PreRelease
        if: ${{ steps.branch-exists.outputs.exists == 'true' }}
        uses: tukasz/direct-merge-action@master
        with:
          # Use another token then GITHUB_TOKEN to trigger subsequent workflows
          GITHUB_TOKEN: ${{ secrets.CI_PAT }}
          source-branch: ${{ steps.branch-names.outputs.source-branch }}
          target-branch: ${{ steps.branch-names.outputs.name }}
          commit-message: ${{ steps.commit-message.outputs.message }}
