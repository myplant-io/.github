name: Dependency check

on:
  schedule:
    # at 00:00 every sunday (on the default branch - develop)
    - cron: "0 0 * * SUN"
  push:
    branches: [master]
  workflow_dispatch:

env:
  COMPONENT_NAME: auto
  GRADLE_TASK: "cyclonedx dependencyCheckAnalyze"

jobs:
  dependencyCheck:
    name: "Job: Dependency check"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [11]

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Checkout github actions repository
        uses: actions/checkout@v2
        with:
          repository: myplant-io/github-actions
          ref: v0.4.0
          token: ${{ secrets.CI_PAT }}
          path: .github/actions

      - name: Check setting file existence
        id: check_settings_file
        if: env.COMPONENT_NAME == 'auto'
        uses: andstor/file-existence-action@v1
        with:
          allow_failure: true
          files: ./settings.gradle

      - name: Set env 'COMPONENT_NAME' (settings are present)
        if: env.COMPONENT_NAME == 'auto' && steps.check_settings_file.outputs.files_exists == 'true'
        run: echo COMPONENT_NAME="$(grep 'rootProject.name' settings.gradle | cut -d '=' -f 2 | tr -d '\r' | sed 's|[\"'\'\\t' ]||g')" >> ${GITHUB_ENV}

      - name: Set env 'COMPONENT_NAME' (no settings found)
        if: env.COMPONENT_NAME == 'auto' && steps.check_settings_file.outputs.files_exists == 'false'
        run: echo COMPONENT_NAME="${{ github.event.repository.name }}" >> ${GITHUB_ENV}

      - name: Set env 'BRANCH_NAME'
        run: echo BRANCH_NAME=${GITHUB_REF/refs\/heads\//} >> ${GITHUB_ENV}

      - name: Set env 'SHA'
        run: echo SHA=$(echo ${GITHUB_SHA} | cut -c1-7) >> ${GITHUB_ENV}

      - name: Set 'VERSION' to SHA
        run: echo VERSION=${{ env.SHA }} >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPO: ${{ github.event.repository.name }}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "VERSION: ${{ env.VERSION }}"
          echo "depdendency.track.projectname: ${{ env.COMPONENT_NAME }}"
          echo "depdendency.track.projectversion: ${{ env.BRANCH_NAME }}"

      - name: Prepare gradle properties
        run: printf "\n$GRADLE_PROPS" >> gradle.properties
        env:
          GRADLE_PROPS: ${{ secrets.GRADLE_PROPERTIES }}

      - name: Prepare java ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java-version }}

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Dependency check with gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: |
            ${{ env.GRADLE_TASK }} -Pversion=${{ env.VERSION }}
            -Pcyclonedx.includeBomSerialNumber=false

      - name: Post process dependency check bom
        run: sed -i "s/type=jar//g" build/reports/bom.xml

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: SBOM
          path: "build/reports/bom.xml"

      - name: Publish dependency check result to tracker
        id: upload-dependency-track
        uses: ./.github/actions/upload-dependency-track
        with:
          apikey: ${{ secrets.DEPENDENCYTRACK_APIKEY }}
          bomfilename: "build/reports/bom.xml"
          projectname: ${{ env.COMPONENT_NAME }}
          projectversion: ${{ env.BRANCH_NAME }}
