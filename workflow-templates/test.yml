name: Test and validate

on:
  pull_request:
    branches: [develop]
  workflow_dispatch:

env:
  GRADLE_TASK: 'test'
  JAVA_VERSION: 11
  REPORT_DIR: auto

jobs:
  validateAndTest:
    name: 'Job: Test and validate'
    runs-on: ubuntu-latest

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set env 'VERSION' to SHA (for untagged deployments)
        if: startsWith(github.ref, 'refs/tags/') != true
        run: echo VERSION="${{ env.SHA }}" >> ${GITHUB_ENV}

      - name: Set env 'REPORT_DIR'
        if: env.REPORT_DIR == 'auto'
        run: echo REPORT_DIR="build/reports/tests/" >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPO: ${{ github.event.repository.name }}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "REPORT_DIR: ${{ env.REPORT_DIR }}"
          echo "VERSION: ${{ env.VERSION }}"

      - name: Prepare Gradle properties
        env:
          GRADLE_PROPS: ${{ secrets.GRADLE_PROPERTIES }}
        run: printf "\n$GRADLE_PROPS" >> gradle.properties

      - name: Prepare Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with gradle (incl. test and sonar)
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: ${{ env.GRADLE_TASK }} -Pversion=${{ env.VERSION }}

      - name: Upload test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: ${{ env.REPORT_DIR }}
