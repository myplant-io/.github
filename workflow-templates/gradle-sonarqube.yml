###
# GitHub action that analyzes the code with the sonarqube scanner and pushes
# the result to the myplant sonarqube (sonar-dev.myplant-io).
#
# Prerequisites:
#  - ".github/workflow-config.env" exists
#
# Created by: Daniel Hons, Nikolaus Krismer
###
name: Sonarqube

on:
  pull_request:
    branches: [develop]
    paths-ignore:
      - ".github/workflows/*auto-update*"
  push:
    branches: [main, master, develop, release/**, bugfix/**, hotfix/**]
  repository_dispatch:
    types: [sonarqube]
  workflow_dispatch:

jobs:
  sonarqube:
    name: "Job: Sonarqube"
    if: startsWith(github.actor, 'dependabot') == false && contains(github.event.pull_request.labels.*.name, 'dependencies') == false
    runs-on: ubuntu-latest
    concurrency:
      group: "sonarqube_${{ github.ref }}"
      cancel-in-progress: true

    strategy:
      matrix:
        java-version: [11]

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout git repository
        uses: actions/checkout@v3
        if: github.event_name != 'repository_dispatch'
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Checkout git repository (for dispatched runs)
        uses: actions/checkout@v3
        if: github.event_name == 'repository_dispatch'
        with:
          fetch-depth: 0
          ref: "${{ github.event.client_payload.branch }}"

      - name: Check workflow config file existence
        uses: andstor/file-existence-action@v2
        with:
          fail: true
          files: ".github/workflow-config.env"

      - name: Load workflow config (.env file)
        uses: cardinalby/export-env-action@v1
        with:
          envFile: ".github/workflow-config.env"

      - name: Set env 'SHA'
        run: echo SHA="$(echo ${GITHUB_SHA} | cut -c1-7)" >> ${GITHUB_ENV}

      - name: Set env 'VERSION' to SHA (for untagged deployments)
        if: startsWith(github.ref, 'refs/tags/') == false
        run: echo VERSION="${{ env.SHA }}" >> ${GITHUB_ENV}

      - name: Set env 'TAG' (for tagged deployment)
        if: startsWith(github.ref, 'refs/tags/')
        run: echo TAG="${GITHUB_REF#refs/tags/}" >> ${GITHUB_ENV}

      - name: Set 'VERSION' (for tagged deployment)
        if: startsWith(github.ref, 'refs/tags/')
        run: echo VERSION="${TAG#v}" >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "TAG: ${{ env.TAG }}"
          echo "VERSION: ${{ env.VERSION }}"
          echo "sonar.github.repository: ${{ github.repository }}"
          echo "sonar.pullrequest.base: ${{ github.base_ref }}"
          echo "sonar.pullrequest.branch: ${{ github.head_ref }}"
          echo "sonar.pullrequest.key: ${{ github.event.number }}"

      - name: Prepare gradle properties
        run: printf "\n$GRADLE_PROPS" >> gradle.properties
        env:
          GRADLE_PROPS: ${{ secrets.GRADLE_PROPERTIES }}

      - name: Prepare java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: ${{ matrix.java-version }}

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Configure AWS credentials (to enable test to download containers)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_USER }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: aws-login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Sonarqube with gradle
        if: startsWith(github.event_name, 'pull_request') == false
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ env.GRADLE_SONARQUBE_TASK }} -Pversion=${{ env.VERSION }}

      - name: Sonarqube with gradle (on PR)
        if: startsWith(github.event_name, 'pull_request')
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            ${{ env.GRADLE_SONARQUBE_TASK }} -Pversion=${{ env.VERSION }}
              -Dsonar.pullrequest.github.endpoint=https://api.github.com
              -Dsonar.pullrequest.github.repository=${{ github.repository }}
              -Dsonar.pullrequest.base=${{ github.base_ref }}
              -Dsonar.pullrequest.branch=${{ github.head_ref }}
              -Dsonar.pullrequest.key=${{ github.event.number }}
              -Dsonar.qualitygate.wait=true
