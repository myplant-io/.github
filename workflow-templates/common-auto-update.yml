###
# GitHub action that updates github actions from the template repository.
#
# Prerequisites:
#  - ".github/workflow-config.env" exists
#  - to update non-common files, COMPONENT_TYPE variable needs to be set
#
# Created by: Nikolaus Krismer
###
name: Update GitHub actions

on:
  pull_request_target:
    paths:
      - ".github/workflows/*auto-update*"

jobs:
  updateGitHubActions:
    name: "Job: Update GH actions"
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: [self-hosted, linux]
    concurrency:
      group: "update_${{ github.ref }}"
      cancel-in-progress: false

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Allow dependabot to check for version
        uses: myplant-io/.github@v0.6.1

      - name: Checkout github actions repo
        uses: actions/checkout@v3
        with:
          repository: myplant-io/.github
          token: ${{ secrets.CI_PAT }}
          path: source

      - name: Checkout git repository
        if: startsWith(github.event_name , 'pull_request') == false
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: target
          persist-credentials: false

      - name: Checkout git repository (on PR)
        if: startsWith(github.event_name , 'pull_request')
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: target
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check workflow config file existenceif not only common files should be updated,
        uses: andstor/file-existence-action@v2
        with:
          fail: true
          files: "target/.github/workflow-config.env"

      - name: Load workflow config (.env file)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: "target/.github/workflow-config.env"

      - name: Set env 'BRANCH_NAME'
        run: echo BRANCH_NAME="${GITHUB_REF#refs/heads/}" >> ${GITHUB_ENV}

      - name: Set env 'BRANCH_NAME' (on PR)
        if: startsWith(github.event_name , 'pull_request')
        run: echo BRANCH_NAME="${{ github.event.pull_request.head.ref }}" >> ${GITHUB_ENV}

      - name: Set 'SOURCE_DIR'
        run: echo SOURCE_DIR="source/workflow-templates/" >> ${GITHUB_ENV}

      - name: Set 'TARGET_DIR'
        run: echo TARGET_DIR="target/.github/workflows" >> ${GITHUB_ENV}

      - name: Dump GitHub context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

      - name: Set project type to gradle
        if: env.COMPONENT_TYPE == '' || env.COMPONENT_TYPE == 'unknown'
        run: echo COMPONENT_TYPE="none" >> ${GITHUB_ENV}

      - name: Test project-type (for gradle)
        id: determine-type-gradle
        run: echo cnt_validations=$(grep 'gradle-' "${{ env.TARGET_DIR }}/auto-update*" | wc -l )>> ${GITHUB_OUTPUT}

      - name: Determine file extensions for github action files
        run: echo FILE_TYPE=$(ls ${{ env.TARGET_DIR }}/auto-update* |  tr . \\n | tail -n1) >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "BRANCH_NAME: ${{ env.BRANCH_NAME }}"
          echo "SOURCE_DIR: ${{ env.SOURCE_DIR }}"
          echo "TARGET_DIR: ${{ env.TARGET_DIR }}"
          echo "COMPONENT_TYPE: ${{ env.COMPONENT_TYPE }}"
          echo "FILE_TYPE: ${{ env.FILE_TYPE }}"

      - name: List source contents
        run: ls ${{ env.SOURCE_DIR }}

      - name: List target contents
        run: ls ${{ env.TARGET_DIR }}

      - name: Move relevant github actions in place
        if: env.COMPONENT_TYPE != 'none'
        run: |
          mv ${{ env.SOURCE_DIR}}/common-merge.yml ${{ env.TARGET_DIR }}/merge.${{ env.FILE_TYPE }}
          mv ${{ env.SOURCE_DIR}}/${{ env.COMPONENT_TYPE }}-dependency-check.yml ${{ env.TARGET_DIR }}/dependency-check.${{ env.FILE_TYPE }}
          mv ${{ env.SOURCE_DIR}}/${{ env.COMPONENT_TYPE }}-deploy.yml ${{ env.TARGET_DIR }}/deploy.${{ env.FILE_TYPE }}
          mv ${{ env.SOURCE_DIR}}/${{ env.COMPONENT_TYPE }}-sonarqube.yml ${{ env.TARGET_DIR }}/sonarqube.${{ env.FILE_TYPE }}
          mv ${{ env.SOURCE_DIR}}/${{ env.COMPONENT_TYPE }}-test.yml ${{ env.TARGET_DIR }}/test.${{ env.FILE_TYPE }}

      - name: Move relevant github actions in place
        if: env.COMPONENT_TYPE == 'none'
        run: |
          mv ${{ env.SOURCE_DIR}}/common-merge.yml ${{ env.TARGET_DIR }}/merge.${{ env.FILE_TYPE }}
          mv ${{ env.SOURCE_DIR}}/common-sonarqube.yml ${{ env.TARGET_DIR }}/sonarqube.${{ env.FILE_TYPE }}

      - name: Commit and push changes
        uses: actions-js/push@v1.3
        with:
          branch: ${{ env.BRANCH_NAME }}
          directory: ${{ env.TARGET_DIR }}
          empty: true
          github_token: ${{ secrets.CI_PAT }}
          message: "build: auto-update of GitHub actions [skip ci]"
