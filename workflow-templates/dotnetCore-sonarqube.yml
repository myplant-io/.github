###
# GitHub action that analyzes the code with the sonarqube scanner and pushes
# the result to the myplant sonarqube (sonar-dev.myplant-io).
#
# Prerequisites:
#  - ".github/workflow-config.env" exists
#
# Created by: Nikolaus Krismer
###
name: Sonarqube

on:
  pull_request:
    branches: [develop]
    paths-ignore:
      - '.github/workflows/*auto-update*'
  push:
    branches: [main, master, develop, release/**, bugfix/**, hotfix/**]
  repository_dispatch:
    types: [sonarqube]
  workflow_dispatch:

jobs:
  sonarqube:
    name: 'Job: Sonarqube'
    if: startsWith(github.actor, 'dependabot') == false && contains(github.event.pull_request.labels.*.name, 'dependencies') == false
    runs-on: [self-hosted-standard]
    concurrency:
      group: sonarqube_${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        dotnet-version: ['6.0.x']

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout git repository
        uses: actions/checkout@v4
        if: github.event_name != 'repository_dispatch'
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Checkout git repository (for dispatched runs)
        uses: actions/checkout@v4
        if: github.event_name == 'repository_dispatch'
        with:
          fetch-depth: 0
          ref: '${{ github.event.client_payload.branch }}'

      - name: Check workflow config file existence
        uses: andstor/file-existence-action@v3
        with:
          fail: true
          files: '.github/workflow-config.env'

      - name: Load workflow config (.env file)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: '.github/workflow-config.env'

      - name: Set env 'COMPONENT_NAME'
        if: env.COMPONENT_NAME == 'auto'
        run: echo COMPONENT_NAME="${GITHUB_REPOSITORY#*/}" >> ${GITHUB_ENV}

      - name: Set env SONAR_KEY
        run: echo SONAR_KEY="${{ env.COMPONENT_NAME }}" >> ${GITHUB_ENV}

      - name: Default SONAR_PREFIX to io.myplant
        if: env.SONAR_PREFIX == ''
        run: echo SONAR_PREFIX="io.myplant" >> ${GITHUB_ENV}

      - name: Apply SONAR_PREFIX to SONAR_KEY
        if: env.SONAR_PREFIX != ''
        run: echo SONAR_KEY="${{ env.SONAR_PREFIX }}:${{ env.SONAR_KEY }}" >> ${GITHUB_ENV}

      - name: Get action system info
        if: env.VERBOSE_LOGGING == 'true'
        id: system-info
        uses: kenchan0130/actions-system-info@v1.3.0

      - name: Log env context
        if: env.VERBOSE_LOGGING == 'true'
        run: echo $JSON | jq
        env:
          JSON: ${{ toJSON(env) }}

      - name: Log GitHub context
        if: env.VERBOSE_LOGGING == 'true'
        run: echo $JSON | jq
        env:
          JSON: ${{ toJSON(github) }}

      - name: Log system details
        if: env.VERBOSE_LOGGING == 'true'
        run: |
          echo "os: ${{ runner.os }}"
          echo "host.cpu-model: ${{ steps.system-info.outputs.cpu-model }}"
          echo "host.cpu-core: ${{ steps.system-info.outputs.cpu-core }}"
          echo "host.name: ${{ steps.system-info.outputs.hostname }}"
          echo "os.name: ${{ steps.system-info.outputs.name }}"
          echo "os.kernel.release: ${{ steps.system-info.outputs.kernel-release }}"
          echo "os.kernel.version: ${{ steps.system-info.outputs.kernel-version }}"
          echo "os.platform: ${{ steps.system-info.outputs.platform }}"
          echo "os.release: ${{ steps.system-info.outputs.release }}"

      - name: Prepare dotnet environment
        uses: actions/setup-dotnet@v4
        env:
          DOTNET_INSTALL_DIR: './.dotnet'
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Fetch repository topics
        id: repository_topics
        run: |
          topics=$(curl -H "Accept: application/vnd.github.mercy-preview+json" \
                        -H "Authorization: token ${{ secrets.CI_PAT }}" \
                        https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/topics \
                        | jq -r '.names | join(",")')
          echo topics="$topics" >> ${GITHUB_OUTPUT}

      - name: Update sonar tags with Github topics
        run: |
          curl --header 'Authorization: Bearer ${{ secrets.SONAR_LOGIN }}' \
          -X POST '${{ secrets.SONAR_URL }}/api/project_tags/set' \
          -d 'project=${{ env.SONAR_KEY }}&tags=${{ steps.repository_topics.outputs.topics }},githubowner-${{ github.repository_owner }},githubrepo-${{ github.event.repository.name }}'

      - name: SonarScanner for .NET 5.x with pull request decoration support
        if: startsWith(matrix.dotnet-version, '5')
        uses: highbyte/sonarscan-dotnet@2.0
        with:
          dotnetDisableTests: true
          sonarProjectKey: ${SONAR_KEY}
          sonarProjectName: ${COMPONENT_NAME}
          sonarHostname: ${{ secrets.SONAR_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarScanner for .NET 6.x with pull request decoration support
        if: startsWith(matrix.dotnet-version, '6')
        uses: highbyte/sonarscan-dotnet@v2.1.5
        with:
          dotnetDisableTests: true
          sonarProjectKey: ${SONAR_KEY}
          sonarProjectName: ${COMPONENT_NAME}
          sonarHostname: ${{ secrets.SONAR_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarScanner for .NET 7.x with pull request decoration support
        if: startsWith(matrix.dotnet-version, '7')
        uses: highbyte/sonarscan-dotnet@v2.2.6
        with:
          dotnetDisableTests: true
          sonarProjectKey: ${SONAR_KEY}
          sonarProjectName: ${COMPONENT_NAME}
          sonarHostname: ${{ secrets.SONAR_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarScanner for .NET 8.x with pull request decoration support
        if: startsWith(matrix.dotnet-version, '8')
        uses: highbyte/sonarscan-dotnet@v2.3.2
        with:
          dotnetDisableTests: true
          sonarProjectKey: ${SONAR_KEY}
          sonarProjectName: ${COMPONENT_NAME}
          sonarHostname: ${{ secrets.SONAR_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
