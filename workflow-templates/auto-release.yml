name: AutoRelease

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # release
      - 'v[0-9]+.[0-9]+.[0-9]+\-[0-9]+' #pre-release

env:
  AUTO_DEPLOY_PRERELEASES: true
  AUTO_DEPLOY_RELEASES: false
  CREATE_DRAFTS_ONLY: false

jobs:
  autoRelease:
    name: 'Job: AutoRelease'
    runs-on: ubuntu-latest

    steps:
      - name: Set env 'TAG'
        run: echo TAG="${GITHUB_REF/refs\/tags\//}" >> ${GITHUB_ENV}

      - name: Determine latest (pre-)release
        id: latest_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft"
          view_top: 1

      - name: Set env 'SHA'
        run: echo "SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Set env 'LATEST_RELEASE'
        run: echo LATEST_RELEASE="${{ steps.latest_release.outputs.tag_name }}" >> ${GITHUB_ENV}

      - name: Initialize env 'IS_PRERELEASE'
        run: echo IS_PRERELEASE=true >> ${GITHUB_ENV}

      - name: Initialize env 'IS_RELEASE'
        run: echo IS_RELEASE=false >> ${GITHUB_ENV}

      - name: Set env 'IS_PRERELEASE' (on pre-release)
        if: contains(env.TAG, '-') == true
        run: echo IS_PRERELEASE=true >> ${GITHUB_ENV}

      - name: Set env 'IS_RELEASE' (on release)
        if: contains(env.TAG, '-') == false
        run: echo IS_RELEASE=true >> ${GITHUB_ENV}

      - name: Set env 'IS_AUTO_RELEASE'
        run: echo IS_AUTO_RELEASE=${{ env.LATEST_RELEASE != env.TAG }} >> ${GITHUB_ENV}

      - name: Set env 'IS_MANUAL_RELEASE'
        run: echo IS_MANUAL_RELEASE=${{ env.LATEST_RELEASE == env.TAG }} >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPO: ${{ github.event.repository.name }}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "IS_AUTO_RELEASE: ${{ env.IS_AUTO_RELEASE }}"
          echo "IS_MANUAL_RELEASE: ${{ env.IS_MANUAL_RELEASE }}"
          echo "IS_PRERELEASE: ${{ env.IS_PRERELEASE }}"
          echo "IS_RELEASE: ${{ env.IS_RELEASE }}"
          echo "SHA: ${{ env.SHA }}"
          echo "TAG: ${{ env.TAG }}"
          echo "LATEST_RELEASE: ${{ env.LATEST_RELEASE }}"

      - name: Create new pre-release
        if: env.IS_AUTO_RELEASE == 'true' && env.IS_PRERELEASE == 'true'
        uses: ncipollo/release-action@v1
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          allowUpdates: true
          draft: ${{ env.CREATE_DRAFTS_ONLY }}
          prerelease: true

      - name: Create new release
        if: env.IS_AUTO_RELEASE == 'true' && env.IS_RELEASE == 'true'
        uses: ncipollo/release-action@v1
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          allowUpdates: true
          draft: ${{ env.CREATE_DRAFTS_ONLY }}
          prerelease: false

      - name: Build and deploy new (pre-)release
        if: env.IS_AUTO_RELEASE == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.CI_PAT }}
          event-type: autoRelease
          client-payload: '{
            "draft": ${{ env.CREATE_DRAFTS_ONLY }},
            "pre-release": ${{ env.IS_PRERELEASE }},
            "release": ${{ env.IS_RELEASE }},
            "sha": "${{ env.SHA }}"
            "tag": "${{ env.TAG }}"
          }'
